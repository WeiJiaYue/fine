package ${controllerPkg};

import com.radarwin.framework.page.Page;
import com.radarwin.framework.page.PageList;
import com.radarwin.framework.util.StringUtil;
import com.radarwin.framework.web.controller.BaseController;
import com.radarwin.framework.web.response.ResponseWrapper;
import ${modelPkg}.${tableInfo.className};
import ${servicePkg}.${tableInfo.className}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.Arrays;
import javax.servlet.http.HttpServletRequest;
import java.util.Map;


/**
 *  auto generated by generation tools v1.0.0
 */
@Controller
public class ${tableInfo.className}Controller extends BaseController {

    @Autowired
    private ${tableInfo.className}Service ${tableInfo.entityName}Service;


    @RequestMapping("/${tableInfo.entityName}/${tableInfo.entityName}JsonList.do")
    @ResponseBody
    public ResponseWrapper getPageJsonList(Page page, HttpServletRequest request) {
        PageList<${tableInfo.className}> pageList = ${tableInfo.entityName}Service.getPageList(page, convertParamToMap(request));
        ResponseWrapper responseWrapper = new ResponseWrapper();
        responseWrapper.addAttribute("${tableInfo.entityName}List", pageList);
        return responseWrapper;
    }

    @RequestMapping("/${tableInfo.entityName}/get.do")
    @ResponseBody
    public ResponseWrapper get(String key) {
        ResponseWrapper responseWrapper = new ResponseWrapper();
        if (StringUtil.isNotBlank(key)) {
            responseWrapper.addAttribute("${tableInfo.entityName}", ${tableInfo.entityName}Service.get(key));
        }
        return responseWrapper;
    }

    @RequestMapping("/${tableInfo.entityName}/create.do")
    @ResponseBody
    public void create(${tableInfo.className} ${tableInfo.entityName}) {
        ${tableInfo.entityName}Service.save(${tableInfo.entityName});
    }

    @RequestMapping("/${tableInfo.entityName}/update.do")
    @ResponseBody
    public void update(${tableInfo.className} ${tableInfo.entityName}) {
        ${tableInfo.entityName}Service.update(${tableInfo.entityName});
    }

    @RequestMapping("/${tableInfo.entityName}/del.do")
    @ResponseBody
    public void logicDelete(String key) {
        ${tableInfo.entityName}Service.delete(key);
    }

    @RequestMapping("/${tableInfo.entityName}/batchDel.do")
    @ResponseBody
    public void batchDelete(String keys) {
        if (StringUtil.isNotBlank(keys)) {
            ${tableInfo.entityName}Service.batchDelete(Arrays.asList(keys.split(StringUtil.COMMA)));
        }
    }
}
